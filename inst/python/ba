"1","DESeq2","Sequencing:RNASeq:ChIPSeq:GeneExpression","--- title: ""Analyzing RNA-seq data with DESeq2"" author: ""Michael I. Love, Simon Anders, and Wolfgang Huber"" date: ""`r format(Sys.Date(), '%m/%d/%Y')`"" abstract: >   A basic task in the analysis of count data from RNA-seq is the   detection of differentially expressed genes. The count data are   presented as a table which reports, for each sample, the number of   sequence fragments that have been assigned to each gene. Analogous   data also arise for other assay types, including comparative ChIP-Seq,   HiC, shRNA screening, and mass spectrometry.  An important analysis   question is the quantification and statistical inference of systematic   changes between conditions, as compared to within-condition   variability. The package DESeq2 provides methods to test for   differential expression by use of negative binomial generalized linear   models; the estimates of dispersion and logarithmic fold changes   incorporate data-driven prior distributions. This vignette explains the   use of the package and demonstrates typical workflows.   [An RNA-seq workflow](http://www.bioconductor.org/help/workflows/rnaseqGene/)   on the Bioconductor website covers similar material to this vignette   but at a slower pace, including the generation of count matrices from   FASTQ files.   DESeq2 package version: `r packageVersion(""DESeq2"")` output:   rmarkdown::html_document:     highlight: pygments     toc: true     fig_width: 5 bibliography: library.bib vignette: >   %\VignetteIndexEntry{Analyzing RNA-seq data with DESeq2}   %\VignetteEngine{knitr::rmarkdown}   %\VignetteEncoding{UTF-8}   %\usepackage[utf8]{inputenc} ---  ```{r setup, echo=FALSE, results=""hide""} knitr::opts_chunk$set(tidy = FALSE,                       cache = FALSE,                       dev = ""png"",                       message = FALSE, error = FALSE, warning = TRUE) ```	  # Standard workflow  **Note:** if you use DESeq2 in published research, please cite:  > Love, M.I., Huber, W., Anders, S. (2014) > Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. > *Genome Biology*, **15**:550. > [10.1186/s13059-014-0550-8](http://dx.doi.org/10.1186/s13059-014-0550-8)  Other Bioconductor packages with similar aims are [edgeR](http://bioconductor.org/packages/edgeR), [limma](http://bioconductor.org/packages/limma), [DSS](http://bioconductor.org/packages/DSS), [EBSeq](http://bioconductor.org/packages/EBSeq), and  [baySeq](http://bioconductor.org/packages/baySeq).  ## Quick start  Here we show the most basic steps for a differential expression analysis. There are a variety of steps upstream of DESeq2 that result in the generation of counts or estimated counts for each sample, which we will discuss in the sections below. This code chunk assumes that you have a count matrix called `cts` and a table of sample information called `coldata`.  The `design` indicates how to model the samples, here, that we want to measure the effect of the condition, controlling for batch differences. The two factor variables `batch` and `condition` should  be columns of `coldata`.   ```{r quickStart, eval=FALSE} dds <- DESeqDataSetFromMatrix(countData = cts,                               colData = coldata,                               design= ~ batch + condition) dds <- DESeq(dds) resultsNames(dds) # lists the coefficients res <- results(dds, name=""condition_trt_vs_untrt"") # or to shrink log fold changes association with condition: res <- lfcShrink(dds, coef=""condition_trt_vs_untrt"", type=""apeglm"") ```  The following starting functions will be explained below:  * If you have performed transcript quantification    (with *Salmon*, *kallisto*, *RSEM*, etc.)    you could import the data with *tximport*, which produces a list,   and then you can use `DESeqDataSetFromTximport()`. * If you imported quantification data with *tximeta*, which produces a   *SummarizedExperiment* with additional metadata, you can then use   `DESeqDataSet()`. * If you have *htseq-count* files, you can use    `DESeqDataSetFromHTSeq()`.  ## How to get help for DESeq2  Any and all DESeq2 questions should be posted to the  **Bioconductor support site**, which serves as a searchable knowledge base of questions and answers:  <https://support.bioconductor.org>  Posting a question and tagging with ""DESeq2"" will automatically send an alert to the package authors to respond on the support site.  See the first question in the list of [Frequently Asked Questions](#FAQ) (FAQ) for information about how to construct an informative post.   You should **not** email your question to the package authors, as we will just reply that the question should be posted to the  **Bioconductor support site**.  ## Acknowledgments  Constantin Ahlmann-Eltze has contributed core code for increasing the computational performance of *DESeq2* and building an interface to his *glmGamPoi* package.  We have benefited in the development of *DESeq2* from the help and feedback of many individuals, including but not limited to:   The Bionconductor Core Team, Alejandro Reyes, Andrzej Oles, Aleksandra Pekowska, Felix Klein, Nikolaos Ignatiadis (IHW), Anqi Zhu (apeglm), Joseph Ibrahim (apeglm), Vince Carey, Owen Solberg, Ruping Sun, Devon Ryan,  Steve Lianoglou, Jessica Larson, Christina Chaivorapol, Pan Du, Richard Bourgon, Willem Talloen,  Elin Videvall, Hanneke van Deutekom, Todd Burwell,  Jesse Rowley, Igor Dolgalev, Stephen Turner, Ryan C Thompson, Tyr Wiesner-Hanks, Konrad Rudolph, David Robinson, Mingxiang Teng, Mathias Lesche, Sonali Arora, Jordan Ramilowski, Ian Dworkin, Bjorn Gruning, Ryan McMinds, Paul Gordon, Leonardo Collado Torres, Enrico Ferrero, Peter Langfelder, Gavin Kelly, Rob Patro, Charlotte Soneson, Koen Van den Berge, Fanny Perraudeau, Davide Risso, Stephan Engelbrecht, Nicolas Alcala, Jeremy Simon, Travis Ptacek, Rory Kirchner, R. Butler, Ben Keith, Dan Liang, Nil Ayg√ºn, Rory Nolan, Michael Schubert, Hugo Tavares, Eric Davis, Wancen Mu, Zhang Cheng, Frederik Ziebell, Luca Menestrina, Hendrik Weisse"
